//#include <stdio.h>
//#include <stdlib.h>
//#include <locale.h>
//
//// Объявление функции сортировки пузырьком
//void BubbleSort(int A[], int n) {
//
//    int i, found; // Объявление переменных
//
//    // Выполнение сортировки пузырьком
//    do {
//        found = 0;
//
//        // Проход по массиву
//        for (i = 0; i < n - 1; i++)
//
//            // Проверка и обмен элементов, если текущий элемент больше следующего
//            if (A[i] > A[i + 1]) {
//                int cc = A[i];
//                A[i] = A[i + 1];
//                A[i + 1] = cc;
//
//                // Увеличение счетчика обменов
//                found++;
//            }
//    } while (found != 0); // Повторение цикла, пока есть обмены
//}
//
//// Объявление функции сортировки подсчётом
//void CountingSort(int in[], int out[], int n) {
//    // Объявление переменных для итераций (i, j, k) и максимального значения (max)
//    int i, j, k, max;
//
//    // Находим максимальное значение входного массива
//    for (max = in[0], i = 0; i < n; i++)
//        if (in[i] > max) max = in[i];
//
//    // Выделяем динамическую память под временный массив для подсчета вхождений
//    int* cnt = new int[max + 1];
//
//    // Инициализируем все элементы временного массива нулями
//    for (i = 0; i <= max; i++)
//        cnt[i] = 0;
//
//    // Подсчитываем количество вхождений каждого элемента во входном массиве
//    for (i = 0; i < n; i++)
//        cnt[in[i]]++;
//
//    // Формируем отсортированный массив на основе подсчета вхождений
//    for (j = 0, i = 0; i <= max; i++)
//        // Переносим элементы в выходной массив согласно подсчету
//        while (cnt[i]-- != 0)
//            out[j++] = i;
//}
//
//
//// Основная функция программы
//int main() {
//
//    setlocale(LC_ALL, "RU-ru");
//
//    // Инициализация массива
//    int input[10] = { 5, 1, 4, 9, 2, 7, 8, 6, 3 };
//    int output[10];
//
//    // Вывод неотсортированного массива(для BubbleSort)
//    for (int i = 0; i < 10; i++) {
//        printf(" ", input[i]);
//    }
//    printf("\n");
//
//    // Вызов функции сортировки пузырьком
//    BubbleSort(input, 10);
//
//    CountingSort(input, output, 10);
//
//    printf("Массив: ");
//
//    // Вывод отсортированного массива(для BubbleSort)
//    for (int i = 0; i < 10; i++) {
//        printf("%d ", input[i]);
//    }
//    printf("\n");
//
//    printf("Массив: ");
//
//    // Вывод отсортированного массива(для CountingSort)
//    for (int i = 0; i < 10; i++) {
//        printf("%d ", output[i]);
//    }
//    printf("\n");
//
//    // Завершение программы
//    return 0;
//}
//
